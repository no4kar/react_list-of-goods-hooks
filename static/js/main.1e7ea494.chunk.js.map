{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","BY_NONE","sortBy","setSortBy","isSortReversed","setIsSortReversed","visibleGoods","goods","preparedGoods","sort","a","b","BY_ALPHABET","localeCompare","BY_LENGTH","length","reverse","getPreparedGoods","className","type","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,6BAAAA,I,0BAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,SAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4CH,oBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KAwBMC,EA9CR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,OAAQE,EACV,EADUA,eAEJI,EAAgB,YAAID,GAAOE,MAAK,SAACC,EAAGC,GACxC,OAAQT,GACN,KAAKL,EAASe,YACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKd,EAASiB,UACZ,OAAQJ,EAAEK,OAASJ,EAAEI,OAEvB,QACE,OAAO,MAIb,OAAOX,EAAiBI,EAAcQ,UAAYR,EA6B7BS,CAAiBnB,EACpC,CAAEI,SAAQE,mBAEZ,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,oCACPhB,IAAWL,EAASe,aAAe,YACrCQ,QAjCqB,WAC3BjB,EAAUD,IAAWL,EAASe,YAC1Bf,EAASI,QACTJ,EAASe,cA0BT,iCASA,wBACEO,KAAK,SACLD,UAAS,uCACPhB,IAAWL,EAASiB,WAAa,YACnCM,QApCmB,WACzBjB,EAAUD,IAAWL,EAASiB,UAC1BjB,EAASI,QACTJ,EAASiB,YA6BT,4BASA,wBACEK,KAAK,SACLD,UAAS,wCACNd,GAAkB,YACrBgB,QAvCmB,WACzBf,GAAkB,WAA4B,IAA3BgB,EAA0B,uDAAnBjB,EACxB,OAAQiB,MAiCN,sBASEnB,GAAUE,IAER,wBACEe,KAAK,SACLD,UAAU,4BACVE,QA3CY,WACtBjB,EAAUN,EAASI,SACnBI,GAAkB,IAsCV,sBAUN,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCtHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1e7ea494.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  BY_NONE = 0,\n  BY_ALPHABET,\n  BY_LENGTH,\n}\n\ntype SortQuery = {\n  sortBy: SortType;\n  isSortReversed: boolean;\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortBy, isSortReversed }: SortQuery,\n) {\n  const preparedGoods = [...goods].sort((a, b) => {\n    switch (sortBy) {\n      case SortType.BY_ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.BY_LENGTH:\n        return (a.length - b.length);\n\n      default:\n        return 0;\n    }\n  });\n\n  return isSortReversed ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.BY_NONE);\n  const [isSortReversed, setIsSortReversed] = useState(false);\n  const handleSortByAlphabet = () => {\n    setSortBy(sortBy === SortType.BY_ALPHABET\n      ? SortType.BY_NONE\n      : SortType.BY_ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortBy(sortBy === SortType.BY_LENGTH\n      ? SortType.BY_NONE\n      : SortType.BY_LENGTH);\n  };\n\n  const handleSortReversed = () => {\n    setIsSortReversed((prev = isSortReversed) => {\n      return !prev;\n    });\n  };\n\n  const handleSortReset = () => {\n    setSortBy(SortType.BY_NONE);\n    setIsSortReversed(false);\n  };\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortBy, isSortReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info\n          ${sortBy !== SortType.BY_ALPHABET && 'is-light'}`}\n          onClick={handleSortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success\n          ${sortBy !== SortType.BY_LENGTH && 'is-light'}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning\n          ${!isSortReversed && 'is-light'}`}\n          onClick={handleSortReversed}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isSortReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleSortReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n        {/* <li data-cy=\"Good\">...</li> */}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}